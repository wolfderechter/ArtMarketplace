@page "/messages"
@using EuropArt.Client.Accounts
@using EuropArt.Domain.Messages
@using EuropArt.Shared.Accounts
@using EuropArt.Shared.Artists


@if(Conversations is not null)
{
        
       @* <AuthorizeView Roles="Buyer">*@
            
            @foreach(var conversation in Conversations)
            {
                <ConversationDetail AuthId="@conversation.ArtistAuthId"/>
                
              <p>@conversation.ArtistAuthId @conversation.UserAuthId</p>
            }
       @* </AuthorizeView>  *@ 
     
}

    


@code {



    private List<Conversation> Conversations { get; set; }
    [Inject] public AuthenticationStateProvider auth { get; set; }
    [Inject] public IAccountService AccountService { get; set; }
    [Inject] public IArtistService ArtistService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await auth.GetAuthenticationStateAsync();
        var user = authState.User;
        var authId = user.Claims.ElementAt(4).Value.Substring(6);

        AccountRequest.GetConversations request = new() { AuthId = authId };
        var response = await AccountService.GetConversationsAsync(request);
        Conversations = response.Conversations;
    }


    public async Task<ArtistDto.Detail> GetArtist(string authId)
    {

        ArtistRequest.GetDetailByAuthId request = new() { AuthId = authId };
        var response = await ArtistService.GetDetailByAuthIdAsync(request);
        var artist = response.Artist;
        return artist;
    }

}
