@page "/artist/{id:int}"
@using EuropArt.Shared.Artists
@using EuropArt.Shared.Artworks
@inject IStringLocalizer<EuropArt.Shared.Resources.Artists.Detail> Loc

<div class="row">
    <div class="col-6">
        <h2 class="Kunstenaar">@artist.Name</h2>
    </div>
    <div class="col-6 text-end">
        <AuthorizeView>
            <div class="admin-buttons">
                <a href="artist/edit/@Id" class="edit" style="margin-right:5px"><img src="/images/edit.svg" /></a>
                <AuthorizeView Roles="Admin" Context="bruh">
                    @if (RequestingDelete)
                    {
                        <a style="color: var(--bs-body-color); text-decoration:none;" @onclick="ConfirmDelete" class="edit">@Loc["ConfirmDelete"]</a>
                        <a style="color: var(--bs-body-color); text-decoration:none;" @onclick="CancelRequestDelete" class="edit">@Loc["CancelDelete"]</a>
                    }
                    else
                    {

                        <a style="color: var(--bs-body-color); text-decoration:none;" class="edit" @onclick="RequestDelete">@Loc["Delete"]</a>


                    }
                </AuthorizeView>
            </div>
        </AuthorizeView>
        
    </div>

</div>


@if (artist == null)
{
<p><em>Loading...</em></p> }
else
{
    <div class="row artist-detail align-items-center">
        <div class="col-4 text-center mb-5">
            <img src="@artist.ImagePath" class="detail-profile-pic" />
        </div>
        <div class="col-8 mb-5">
            <p>
                <img src="images/locate.svg" class="location" /> @artist.City
            </p>
            <p>
                @artist.Biography
            </p>
            <p><a href="http://www.@artist.Website" target="_blank">@artist.Website</a></p>
        </div>
        <div class="col-8">
            <h3>@Loc["Latest Artworks"]</h3>
        </div>
        <div class="col-4 text-end">
            <a href="#">@Loc["View all"] @artist.Artworks.Count() @Loc["artworks"]</a>
        </div>
        @if (artist.Artworks.Count > 0)
        {
            @foreach (var artwork in artist.Artworks)
            {
            <div class="kol col-4">
                <div class="badge-kunstwerk">
                    <a href="artwork/@artwork.Id"><img src="@artwork.ImagePath"></a>
                    <div class="k-p">
                        <span class="prijs">@artwork.Price.ToString("C")</span>
                    </div>
                    <span class="naam">@artwork.Name</span>
                </div>
            </div>
            } 
         }
         else
         {
            <p>@Loc["No artworks yet"]</p>
         }
    </div>
}

@code { 
    private ArtistDto.Detail artist = new();
    private bool RequestingDelete;

    [Parameter] public int Id { get; set; }
    [Inject] public IArtistService ArtistService { get; set; }
    [Inject] public IArtworkService ArtworkService { get; set; }
    [Inject] NavigationManager NavigationManager { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        ArtistRequest.GetDetail request = new() { ArtistId = Id };
        var response = await ArtistService.GetDetailAsync(request);
        artist = response.Artist;
    }

    private async Task ConfirmDelete()
    {
        var request = new ArtistRequest.Delete { ArtistId = Id };
        await ArtistService.DeleteAsync(request);

        //nog uitwerken: artiest zijn kunstwerken verwijderen via api call
        //await ArtworkService.DeleteArtistAsync(Id);
        NavigationManager.NavigateTo("/artist");
    }

    private void RequestDelete()
    {
        RequestingDelete = true;
    }
    private void CancelRequestDelete()
    {
        RequestingDelete = false;
    }
    }

