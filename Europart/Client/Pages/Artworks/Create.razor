@page "/artwork/add"
@inject IStringLocalizer<EuropArt.Shared.Resources.Artworks.Create> Loc
@inject IArtworkService ArtworkService
@inject StorageService StorageService
@using EuropArt.Shared.Artworks
@using EuropArt.Client.Infrastructure
@inject NavigationManager NavigationManager 

<h1 class="text-center">@Loc["AddArtwork"]</h1>

<div class="row">
    <div class="col-8 offset-2">
        <EditForm Model="@newArtwork" OnValidSubmit="CreateNewArtwork" class="form">
            <FluentValidationValidator/>
            <DataAnnotationsValidator />
            <div class="mb-3">
                <h6>@Loc["Title"]</h6>
                <InputText class="form-control" id="exampleInputTitle" @bind-Value="newArtwork.Name"
                           aria-describedby="titleHelp" placeholder="Enter title" />
                <ValidationMessage For="@(() => newArtwork.Name)" />
            </div>
            <div class="mb-3">
                <h6>@Loc["Description"]</h6>
                <InputText @bind-Value="newArtwork.Description" class="form-control" id="exampleInputDescription1"
                           placeholder="Enter description" />
            </div>
            <div class="mb-3">
                <h6>@Loc["Price"]</h6>
                <InputNumber @bind-Value="newArtwork.Price" class="form-control" placeholder="Enter price" />
                <ValidationMessage For="@(() => newArtwork.Price)" />
            </div>
            <div class="mb-3">
                <h6>@Loc["ChooseArtwork"]</h6>
                <InputFile OnChange="LoadImage" class="file-input" type="file" name="artwork" accept="image/*"/>
                @if(image is not null)
                {
                    <span class="file-name">
                        @image.Name
                    </span>
                }
                <ValidationMessage For="@(() => newArtwork.ImagePath)" />

            </div>
            <div class="mb-3">
                <button type="submit" class="btn btn-primary">@Loc["Add Artwork"]</button>
            </div>
        </EditForm>
    </div>
</div>

@code { 
    ArtworkDto.Create newArtwork = new() {};
    private IBrowserFile image;

    private async Task CreateNewArtwork()
    {
        //Fake image toevoegen
        //newArtwork.ImagePath = "/images/NewArtwork.jpg";
        newArtwork.DateCreated = DateTime.Now;
        newArtwork.ImagePath = image.Name;

        ArtworkRequest.Create request = new()
        {
            Artwork = newArtwork
        };

        //response zal sas-token bevatten uiteindelijk
        var response = await ArtworkService.CreateAsync(request);
        await StorageService.UploadImageAsync(response.UploadUri, image);
        NavigationManager.NavigateTo("/artwork");
    }

    private void LoadImage(InputFileChangeEventArgs args)
    {
        image = args.File;
    }
}